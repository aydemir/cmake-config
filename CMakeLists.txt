cmake_minimum_required(VERSION 2.4.6)

#find the package
if(PATH_TO_FILE)
  set (CMAKE_MODULE_PATH ${PATH_TO_FILE} ${CMAKE_MODULE_PATH})
  set (${PACKAGE}_DIR ${PATH_TO_FILE})
endif(PATH_TO_FILE)
if(PACKAGE_COMPONENTS)
    if(REQUIRED_VERSION)
        find_package(${PACKAGE} ${REQUIRED_VERSION} COMPONENTS ${PACKAGE_COMPONENTS} QUIET REQUIRED)
    else(REQUIRED_VERSION)
        find_package(${PACKAGE} COMPONENTS ${PACKAGE_COMPONENTS} QUIET REQUIRED)
    endif(REQUIRED_VERSION)
else(PACKAGE_COMPONENTS)
    if(REQUIRED_VERSION)
        find_package(${PACKAGE} ${REQUIRED_VERSION} QUIET REQUIRED)
    else(REQUIRED_VERSION)
        find_package(${PACKAGE} QUIET REQUIRED)
    endif(REQUIRED_VERSION)
endif(PACKAGE_COMPONENTS)
set(FOUNDIT ${${PACKAGE}_FOUND})
if (FOUNDIT)
    #includes
    set(INCLUDE_VAR ${${PACKAGE}_INCLUDE_DIRS} ${${PACKAGE}_INCLUDE_DIRECTORIES})
    if(INCLUDE_VAR)
      list(REMOVE_DUPLICATES INCLUDE_VAR)
      set(INCLUDE_STRING "")
      foreach (inc ${INCLUDE_VAR})
        set(INCLUDE_STRING "${INCLUDE_STRING}-I${inc} ")
      endforeach(inc)
    endif(INCLUDE_VAR)
    message(STATUS "BEGIN_IFLAGS(" ${INCLUDE_STRING} ")END_IFLAGS")
    #lib dirs
    set(LIBDIR_VAR ${${PACKAGE}_LIBRARY_DIRS} ${${PACKAGE}_LIBRARY_DIRECTORIES} ${${PACKAGE}_LIB_DIRS} ${${PACKAGE}_LIB_DIRECTORIES})
    if (LIBDIR_VAR)
      list(REMOVE_DUPLICATES LIBDIR_VAR)
      set(LIBDIR_STRING "")
      foreach (libdir ${LIBDIR_VAR})
        set(LIBDIR_STRING "${LIBDIR_STRING}-L${libdir} ")
      endforeach(libdir)
    endif (LIBDIR_VAR)
    message(STATUS "BEGIN_LFLAGS(" ${LIBDIR_STRING} ")END_LFLAGS")
    #libraries
    set(LIB_VAR ${${PACKAGE}_LIBRARIES} ${${PACKAGE}_LIBS} ${${PACKAGE}_LIBRARY} ${${PACKAGE}_LIB})
    if (LIB_VAR)
      list(REMOVE_DUPLICATES LIB_VAR)
      set(LIB_STRING "")
      foreach (lib ${LIB_VAR})
        set(LIB_STRING "${LIB_STRING}-l${lib} ")
      endforeach(lib)
    endif (LIB_VAR)
    message(STATUS "BEGIN_lFLAGS(" ${LIB_STRING} ")END_lFLAGS")
    
    #defines
    set(DEF_VAR ${${PACKAGE}_DEFINES} ${${PACKAGE}_DEFINITIONS})
    if (DEF_VAR)
      list(REMOVE_DUPLICATES DEF_VAR)
      set(DEF_STRING "")
      foreach (def ${DEF_VAR})
        set(LIB_STRING "${DEF_STRING}${def} ")
      endforeach(def)
    endif (DEF_VAR)
    message(STATUS "BEGIN_DFLAGS(" ${DEF_STRING} ")END_DFLAGS")
endif (FOUND_IT)
